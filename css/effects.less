// out: false
/* effects */ @import '_settings.less';

@ease-types:                            fast, slow, slow2x, slow3x, slow4x, slow5x;
@ease-type-durations:                   .1s, .4s, .8s, 1.2s, 1.6s, 2s;

[class*="ease-"],[class*="ease-1st-"] > *,[class*="ease-2nd-"] > * > * { transition-duration: @ease-default; transition-timing-function: ease-out; }

.ease- {
    ._ease-loop (@i) when (@i > 0) {
        ._ease-loop(@i - 1);

        @name: extract(@ease-types, @i);
        @duration: extract(@ease-type-durations, @i);

        &@{name} {
            &,&[class*="ease-1st-"] > *,&[class*="ease-2nd-"] > * > * { transition-duration: @duration; }
        }

    }
    ._ease-loop(length(@ease-types));

    &all { transition-property: all; }

    &color,&1st-color > *,&2nd-color > * > * { transition-property: color; }
    &width,&1st-width > *,&2nd-width > * > * { transition-property: width; }
    &height,&1st-height > *,&2nd-height > * > * { transition-property: height; }
    &bg,&1st-bg > *,&2nd-bg > * > * { transition-property: background-color; }
    &margin,&1st-margin > *,&2nd-margin > * > * { transition-property: margin; }
    &border,&1st-border > *,&2nd-border > * > * { transition-property: border-color, border-width; }
    &position,&1st-position > *,&2nd-position > * > * { transition-property: top, right, bottom, left; }
    &layout,&1st-layout > *,&2nd-layout > * > * { transition-property: transform, opacity, box-shadow; }
    &svg,&1st-svg > *,&2nd-svg > * > * { transition-property: fill, stroke; }

    &linear {
        &,&[class*="ease-1st-"]> *,&[class*="ease-2nd-"] > * > * { transition-timing-function: linear; }
    }
    &in {
        &,&[class*="ease-1st-"]> *,&[class*="ease-2nd-"] > * > * { transition-timing-function: ease-in; }
    }
    &out {
        &,&[class*="ease-1st-"]> *,&[class*="ease-2nd-"] > * > * { transition-timing-function: ease-out; }
    }
    &in-out {
        &,&[class*="ease-1st-"]> *,&[class*="ease-2nd-"] > * > * { transition-timing-function: ease-in-out; }
    }
    &default {
        &,&[class*="ease-1st-"]> *,&[class*="ease-2nd-"] > * > * { transition-duration: ease-out !important; transition-timing-function: ease !important; }
    }
}

@keyframes spin { from { transform: rotate(0deg); } to { transform: rotate(360deg); } }
.animate-spin { animation: spin 1.15s linear infinite; }

@keyframes progress { from { background-position: 40px 0; } to { background-position: 0 0; } }
.animate-progress { animation: progress 3s linear infinite; }

@keyframes bounce-x { from { transform: translateX(0); } 25% { transform: translateX(-12%); } 75% { transform: translateX(12%); } 100% { transform: translateX(0); } }
.animate-bounce-x { animation: bounce-x 6s linear infinite; }

@keyframes bounce-y { from { transform: translateY(0); } 25% { transform: translateY(-12%); } 75% { transform: translateY(12%); } 100% { transform: translateY(0); } }
.animate-bounce-y { animation: bounce-y 6s linear infinite; }

@keyframes bounce-z { from { transform: scale(1); } 25% { transform: scale(.9); } 75% { transform: scale(1.1); } 100% { transform: scale(1); } }
.animate-bounce-z { animation: bounce-z 6s linear infinite; }

.no-effects {
    &,&:before,&:after,& *,& *:before,& *:after { transition-property: none !important; animation: none !important; }
}
.pause-effects {
    &,&:before,&:after,& *,& *:before,& *:after { transition-property: none !important;  animation-play-state: paused !important; }
}

& when (@reduced-motion = true) {
    @media (prefers-reduced-motion: reduce) {
        * {
            &,&:before,&:after { transition-property: none !important; animation: none !important; }
        }
    }
}
