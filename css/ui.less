// out: false
/* ui */

// fonts
@font-scaling:                          true; // responsive scaling for largest font sizes

@font-family:                           "Open Sans", Roboto, "Helvetica Neue", Arial, sans-serif;
@font-size:                             14px;
@letter-spacing:                        -0.015em;

@line-height:                           1.42857143;
@line-height-readable:                  1.66em;
@line-height-condensed:                 1.2em;

@font-bold:                             700;
@font-semibold:                         500;
@font-normal:                           400;
@font-light:                            300;
@font-thin:                             200;

@xx-smallest:                           7px;
@x-smallest:                            8px;
@smallest:                              9px;
@xx-small:                              10px;
@x-small:                               11px;
@small:                                 12px;
@large:                                 16px;
@x-large:                               18px;
@xx-large:                              22px;
@largest:                               28px;
@x-largest:                             38px;
@xx-largest:                            48px;

// dark mode
@dark-mode:                             true;
@dark-mode-auto-switcher:               false;

// effects
@ease-timings:                          ease-in ease-out ease-in-out;
@ease-default:                          .15s;
@ease-types:                            { fast: .1s; slow: .4s; slow-2x: .8s; slow-3x: 1.2s; slow-4x: 1.6s; slow-5x: 2s; }

// metrics
@increases:                             1px 2px 3px 4px 5px 10px 15px 20px 25px 30px;

@round:                                 6px;
@circle:                                1000px;

@border-dual:                           2px;
@highlight-space:                       20px;

@btn-lg:                                48px;
@btn-default:                           42px;
@btn-sm:                                32px;
@btn-xs:                                26px;

@form-padding:                          10px;

@photo-img-default:                     50px;
@photo-img-lg:                          80px;
@photo-img-sm:                          @btn-lg;
@photo-img-xs:                          @btn-default;

@icon-default-size:                     20px;
@icon-weight-max:                       38px;
@icon-weight-min:                       12px;
@icon-sizes:                            { xxl: 50px; xl: 34px; lg: 26px; sm: 18px; xs: 14px; }
@icon-sub-opacity:                      .45;

// breakpoints
@xl-breakpoint:                         1630px;
@lg-breakpoint:                         1400px;
@md-breakpoint:                         960px;
@sm-breakpoint:                         768px;
@xs-breakpoint:                         480px;
@layout-min:                            320px;

@xl-start:                              ~'min-width:' @xl-breakpoint;
@lg-finish:                             ~'max-width:' (@xl-breakpoint - 1);

@lg-start:                              ~'min-width:' @lg-breakpoint;
@default-finish:                        ~'max-width:' (@lg-breakpoint - 1);

@default-start:                         ~'min-width:' @md-breakpoint;
@md-finish:                             ~'max-width:' (@md-breakpoint - 1);

@md-start:                              ~'min-width:' @sm-breakpoint;
@sm-finish:                             ~'max-width:' (@sm-breakpoint - 1);

@sm-start:                              ~'min-width:' (@xs-breakpoint + 1);
@xs-finish:                             ~'max-width:' @xs-breakpoint;

// colors
@body-bg:                               hsl(0, 0%, 98%);
@body-bg-dark:                          hsl(218, 16%, 10%);

@no-color:                              transparent;

@white:                                 hsl(0, 0%, 100%);
@white-50:                              hsla(0, 0%, 100%, 0.87);
@white-25:                              hsla(0, 0%, 100%, 0.72);

@black:                                 hsl(0, 0%, 0%);
@black-50:                              hsla(0, 0%, 0%, 0.50);
@black-25:                              hsla(0, 0%, 0%, 0.40);

@gray:                                  hsl(0, 0%, 70%);
@green:                                 hsl(142, 82%, 42%);
@yellow:                                hsl(42, 100%, 45%);
@orange:                                hsl(30, 100%, 50%);
@red:                                   hsl(0, 74%, 55%);
@blue:                                  hsl(212, 64%, 38%);
@base:                                  hsl(226, 52%, 50%);
@sub:                                   hsl(206, 87%, 50%);

@border-color:                          fade(@black, 15%);
@border-color-dark:                     fade(@white, 17.5%);

@table-border-color:                    hsl(0, 0%, 86.7%);
@table-border-color-dark:               @highlighted-dark;

@card-bg:                               @white;
@card-bg-dark:                          hsl(220, 14%, 21%);
@highlighted:                           @white;
@highlighted-dark:                      hsl(220, 8%, 28%);

@btn-bg:                                fade(@black, 8%);
@btn-bg-dark:                           fade(@white, 12.5%);
@btn-hover-bg:                          fade(@black, 15%);
@btn-hover-bg-dark:                     fade(@white, 20%);
@btn-ghost-hover-bg:                    fade(@black, 7.5%);
@btn-ghost-hover-bg-dark:               fade(@white, 7.5%);

// compiling
@referenceCompiling:                    false; // disable duplicate compilings when less files imported as reference

// rulesets
@no-appearance:                         { -webkit-appearance: none; -moz-appearance: none; appearance: none; }
@no-user-select:                        { -ms-user-select: none; -webkit-user-select: none; -moz-user-select: none; user-select: none; }

// variables
._global-vars () {
    --ui-body-bg: @body-bg;

    --ui-white: @white;
    --ui-black: @black;

    --ui-border-color: @border-color;
    --ui-table-border-color: @table-border-color;

    --ui-card-bg: @card-bg;
    --ui-highlighted: @highlighted;

    --ui-btn-bg: @btn-bg;
    --ui-btn-hover-bg: @btn-hover-bg;
    --ui-btn-ghost-hover-bg: @btn-ghost-hover-bg;
}
._global-vars-dark () {
    --ui-body-bg: @body-bg-dark;

    --ui-white: @black;
    --ui-black: @white;

    --ui-border-color: @border-color-dark;
    --ui-table-border-color: @table-border-color-dark;

    --ui-card-bg: @card-bg-dark;
    --ui-highlighted: @highlighted-dark;

    --ui-btn-bg: @btn-bg-dark;
    --ui-btn-hover-bg: @btn-hover-bg-dark;
    --ui-btn-ghost-hover-bg: @btn-ghost-hover-bg-dark;
}

& when (@dark-mode = true) {
    & when (@dark-mode-auto-switcher = true) {
        @media (prefers-color-scheme: light) {
            :root { ._global-vars(); }
        }
        @media (prefers-color-scheme: dark) {
            :root { ._global-vars-dark(); }
        }
    }
    & when (@dark-mode-auto-switcher = false) {
        [data-ui-mode="light"] { ._global-vars(); }
        [data-ui-mode="dark"] { ._global-vars-dark(); }
    }
}

// variable color mixins
._color-var (@var) when (@dark-mode = false) {
    color: @@var;
}
._color-var (@var) when (@dark-mode = true) {
    color: @@var; // fallback
    color: ~'var(--ui-@{var})';
}

._bg-var (@var) when (@dark-mode = false) {
    background-color: @@var;
}
._bg-var (@var) when (@dark-mode = true) {
    background-color: @@var; // fallback
    background-color: ~'var(--ui-@{var})';
}

._gradient-var (@var) when (@dark-mode = false) {
    background-image: @@var;
}
._gradient-var (@var) when (@dark-mode = true) {
    background-image: @@var; // fallback
    background-image: ~'var(--ui-@{var})';
}

._border-color-var (@var: border-color) when (@dark-mode = false) {
    border-color: @@var;
}
._border-color-var (@var: border-color) when (@dark-mode = true) {
    border-color: @@var; // fallback
    border-color: ~'var(--ui-@{var})';
}

._border-var (@dir: border; @style: solid; @width: 1px; @var: border-color) when (@dark-mode = false) {
    @{dir}: @style @width @@var;
}
._border-var (@dir: border; @style: solid; @width: 1px; @var: border-color) when (@dark-mode = true) {
    @{dir}: @style @width @@var; // fallback
    @{dir}: @style @width ~'var(--ui-@{var})';
}

._shadow-var (@h: 0; @v: 0; @blur: 0; @spread: 0; @var: border-color) when (@dark-mode = false) {
    box-shadow: @h @v @blur @spread @@var;
}
._shadow-var (@h: 0; @v: 0; @blur: 0; @spread: 0; @var: border-color) when (@dark-mode = true) {
    box-shadow: @h @v @blur @spread @@var; // fallback
    box-shadow: @h @v @blur @spread ~'var(--ui-@{var})';
}

._fill-var (@var) when (@dark-mode = false) {
    fill: @@var;
}
._fill-var (@var) when (@dark-mode = true) {
    fill: @@var; // fallback
    fill: ~'var(--ui-@{var})';
}

._stroke-var (@var) when (@dark-mode = false) {
    stroke: @@var;
}
._stroke-var (@var) when (@dark-mode = true) {
    stroke: @@var; // fallback
    stroke: ~'var(--ui-@{var})';
}

// font mixins
._font-scale (@size) when (@font-scaling = false) {
    font-size: @size; // fallback
}
._font-scale (@size) when (@font-scaling = true) {
    @unit: (@size / 5);
    @scale: unit(@unit);

    @number: round(@scale);
    @viewport: ~'@{number}vw';

    font-size: @size; // fallback
    font-size: clamp((@size / 2), @size, @viewport); // clamp(min, val, max)
}

// icon mixins
._icon-size(@size) {
    width: @size; height: @size;
}
._icon-weight(@size) {
    @stroke-calc: (@icon-weight-max + (@icon-weight-min - if(@size < @icon-weight-min, @icon-weight-min, @size)));
    @stroke-size: if(@stroke-calc < @icon-weight-min, @icon-weight-min, @stroke-calc);

    stroke-width: @stroke-size;
}
._icon(@size) {
    ._icon-size(@size); ._icon-weight(@size);
}

// reset
* {
    padding: 0; margin: 0;

    &,&:before,&:after { box-sizing: border-box; }
    &:focus { outline-style: none; outline: 0; }
}

html {
    font-family: @font-family; font-size: @font-size; font-weight: @font-normal; line-height: @line-height; letter-spacing: @letter-spacing;
    ._bg-var(body-bg);
}

a {
    &,&:active,&:hover { word-wrap: break-word; text-decoration: none; }
}

img { vertical-align: middle; display: inline-block; border: 0; }

// user agents
.ui-mobile {
    * { -webkit-tap-highlight-color: @no-color; }
}
.ui-ios { -webkit-text-size-adjust: 100%; }

@media (-webkit-min-device-pixel-ratio: 1.25), (min-resolution: 120dpi) {
    .ui-mac.ui-chrome {
        body { backface-visibility: hidden; perspective: 1000; } // chrome high pixel ratio display fix
    }
}

// effects
@keyframes ui-spin {
    from { transform: rotate(0deg); }
    to { transform: rotate(360deg); }
}
@keyframes ui-progress {
    from { background-position: 40px 0; }
    to { background-position: 0 0; }
}

[class*="ui-ease-"],
[class*="ui-ease-1st-"] > *,
[class*="ui-ease-2nd-"] > * > * { transition-duration: @ease-default; transition-timing-function: ease-out; }

.ui-animate {
    &-pin { animation: ui-spin 1.15s linear infinite; }
    &-progress { animation: ui-progress 3s linear infinite; }
}

.ui-no-effects {
    &,&:before,&:after,*,*:before,*:after { transition-property: none !important; animation: none !important; }
}
.ui-pause-effects {
    &,&:before,&:after,*,*:before,*:after { transition-property: none !important; animation-play-state: paused !important; }
}

.ui-ease- {

    each(@ease-types, {
        &@{key} {
            &,&[class*="ui-ease-1st-"] > *,&[class*="ui-ease-2nd-"] > * > * { transition-duration: @value; }
        }
    });

    &color,&1st-color > *,&2nd-color > * > * { transition-property: color; }
    &width,&1st-width > *,&2nd-width > * > * { transition-property: width; }
    &height,&1st-height > *,&2nd-height > * > * { transition-property: height; }
    &bg,&1st-bg > *,&2nd-bg > * > * { transition-property: background-color; }
    &margin,&1st-margin > *,&2nd-margin > * > * { transition-property: margin; }
    &border,&1st-border > *,&2nd-border > * > * { transition-property: border-color, border-width; }
    &position,&1st-position > *,&2nd-position > * > * { transition-property: top, right, bottom, left; }
    &layout,&1st-layout > *,&2nd-layout > * > * { transition-property: transform, opacity, box-shadow; }
    &svg,&1st-svg > *,&2nd-svg > * > * { transition-property: fill, stroke, opacity; }
    &all { transition-property: all; }

    &default {
        &,&[class*="ui-ease-1st-"]> *,&[class*="ui-ease-2nd-"] > * > * { transition-duration: ease-out !important; transition-timing-function: ease !important; }
    }
}

& when (@referenceCompiling = false) { // not compiled when reference importing

    each(@ease-timings, {
        .ui-@{value} {
            &,&[class*="ui-ease-1st-"]> *,&[class*="ui-ease-2nd-"] > * > * { transition-timing-function: @value; }
        }
    });

}