// out: false
/* icons */ @import (reference) 'ui.less';

@icon-weights:                          thin light default semibold bold black;
@icons-margin-sizes:                    5px 10px;

.icon {
    vertical-align: middle; display: inline-block; fill: none; stroke: currentColor; stroke-linecap: round; stroke-linejoin: round;

    ._icon(@icon-default-size);

    &-mirror- {
        &v { transform: scaleY(-1); }
        &h { transform: scaleX(-1); }
    }
}

.svg- {
    &f { fill: currentColor !important; } // fill
    &l { fill: none !important; } // line
    &sd { fill: currentColor !important; stroke: none !important; } // solid
    &s { opacity: @icon-sub-opacity; } // sub
    &fr { fill-rule: evenodd; } // fill-rule
}

each(@icon-sizes, { // do not merge
    .icon-@{key},.icons-@{key} .icon { ._icon-size(@value) !important; }
    .icon-@{key},.icons-@{key} .icon:not([class*="icon-"]) { ._icon-weight(@value) !important; }
});

each(@icon-sizes, { // do not merge
    @weight: extract(@icon-weights, @index);
    .icon-@{weight},.icons-@{weight} .icon:not([class*="icon-"]) { ._icon-weight(@value) !important; }
});

.icons-no-opacity {
    .icon:not(.default-icon) { opacity: 1 !important; }
}
each(@icons-margin-sizes, {
    @size: unit(@value);

    .icons-margin-@{size}-l .icon { margin-left: @value !important; }
    .icons-margin-@{size}-r .icon { margin-right: @value !important; }
    .icons-margin-@{size}-v .icon { margin-top: @value !important; margin-bottom: @value !important; }
    .icons-margin-@{size}-h .icon { margin-right: @value !important; margin-left: @value !important; }
});