// out: false
/* forms */ @import '_settings.less';

@form-line-height:                     18px;
@form-icon-opacity:                    .45;
@form-label-opacity:                   .6;
@form-spacing:                         5px;

@form-focus-bg:                        fade(@black, 1.5%);
@form-focus-bg-dark:                   fade(@white, 7.5%);
@form-focus-border:                    fade(@black, 35%);
@form-focus-border-dark:               fade(@white, 65%);
@form-focus-shadow:                    inset 0 0 2px fade(@black, 7.5%);

@text-icon-size:                       16px;

@select-icon-size:                     12px;
@select-opacity:                       .45;

@clear-form-icon-size:                 12px;

@select-multi-options-border:          fade(@black, 4.5%);
@select-multi-options-border-dark:     fade(@white, 4.5%);

@file-btn-width:                       125px;

@range-radius:                         20px;
@range-thumb-color:                    hsl(220, 3%, 57%);
@range-thumb-color-dark:               hsl(219, 7%, 40%);
@range-track-bg:                       fade(@black, 8%);
@range-track-hover-bg:                 fade(@black, 15%);
@range-track-bg-dark:                  fade(@white, 8%);
@range-track-hover-bg-dark:            fade(@white, 15%);

@form-error-bg:                        fade(@red, 10%);
@form-warning-bg:                      fade(@yellow, 10%);

@placeholder-color:                    fade(@black, 40%);
@placeholder-focus-color:              fade(@black, 23%);
@placeholder-color-dark:               fade(@white, 40%);
@placeholder-focus-color-dark:         fade(@white, 23%);

@form-custom-state-size:               14px;
@indeterminate-state-size:             4px;
@switch-custom-size:                   44px;

@check-custom-bg:                      fade(@black, 65%);
@check-custom-bg-dark:                 fade(@white, 65%);
@switch-custom-bg:                     fade(@black, 15%);
@switch-custom-bg-dark:                fade(@white, 15%);

@form-disabled-opacity:                .65;
@form-disabled-bg:                     fade(@black, 7.5%);
@form-disabled-bg-dark:                fade(@white, 7.5%);
@form-readonly-color:                  fade(@black, 50%);
@form-readonly-color-dark:             fade(@white, 65%);

._global-vars () {
    --form-focus-bg: @form-focus-bg;
    --form-focus-border: @form-focus-border;

    --select-multi-options-border: @select-multi-options-border;

    --range-thumb-color: @range-thumb-color;
    --range-track-bg: @range-track-bg;
    --range-track-hover-bg: @range-track-hover-bg;

    --placeholder-color: @placeholder-color;
    --placeholder-focus-color: @placeholder-focus-color;

    --check-custom-bg: @check-custom-bg;
    --switch-custom-bg: @switch-custom-bg;

    --form-disabled-bg: @form-disabled-bg;
    --form-readonly-color: @form-readonly-color;
}
._global-vars-dark () {
    --select-multi-options-border: @select-multi-options-border-dark;

    --range-thumb-color: @range-thumb-color-dark;
    --range-track-bg: @range-track-bg-dark;
    --range-track-hover-bg: @range-track-hover-bg-dark;

    --form-focus-bg: @form-focus-bg-dark;
    --form-focus-border: @form-focus-border-dark;

    --placeholder-color: @placeholder-color-dark;
    --placeholder-focus-color: @placeholder-focus-color-dark;

    --check-custom-bg: @check-custom-bg-dark;
    --switch-custom-bg: @switch-custom-bg-dark;

    --form-disabled-bg: @form-disabled-bg-dark;
    --form-readonly-color: @form-readonly-color-dark;
}

.ease- {
    &form,&1st-form > *,&2nd-form > * > * {
        transition-property: color, background-color, border-color;

        .icon { transition-property: color, transform, opacity; transition-duration: (@ease-default * 2); }
        .state { transition-property: width, height, background-color, transform, opacity; transition-duration: @ease-default; }
        select { transition-property: opacity; transition-duration: @ease-default; }
        textarea { transition-property: height; transition-duration: @ease-default; }
    }
}

._create-ease-range() {
    .ease-range {
        &::-webkit-slider-thumb { transition-property: transform; transition-duration: @ease-default; }
        &::-moz-range-thumb { transition-property: transform; transition-duration: @ease-default; }
        &::-webkit-slider-runnable-track { transition-property: background-color; transition-duration: @ease-default; }
        &::-moz-range-track { transition-property: background-color; transition-duration: @ease-default; }
    }
}
._create-ease-range();
.no-effects { ._create-ease-range(); }

& when (@reduced-motion = true) {
    @media (prefers-reduced-motion: reduce) {
        ._create-ease-range();
    }
}

.text,.select,.select-multi,.textarea { ._border-var(); overflow: hidden; display: block; position: relative; }
.text,.select,.mobile .select-multi { line-height: normal; min-height: @btn-default; }

.text:not([class*="align-"]) input,.select:not([class*="align-"]) select,.select-multi:not([class*="align-"]) select,.textarea:not([class*="align-"]) textarea { text-align: left !important; }
.text input,.select select,.select-multi select,.textarea textarea { ._color-var(black); width: 100%; background-color: @no-color; border: 0; }
.text input,.select select,.select-multi select,.range { @no-appearance(); }
.text input,.select select,.textarea textarea { line-height: @form-line-height; padding: @form-padding; border-radius: 0; } // border radius fix for Chrome
.text input,.select select { height: (@btn-default - 2); overflow: hidden; }

.toggle-textarea {
    &:not(.form-focus) {
        textarea { line-height: (@btn-default - @form-padding * 2); height: (@btn-default - 2); }
        &.border-dual {
            textarea { line-height: (@btn-default - 2 * @border-dual - @form-padding * 2); height: (@btn-default - 2 * @border-dual); }
        }
        &.no-border {
            textarea { height: @btn-default; }
        }
    }
}

.chrome {
    .text input:-webkit-autofill { -webkit-background-clip: text; } // removes autofill bg
}

& when (@dark-mode = true) {
    & when (@dark-mode-auto-switcher = true) {
        @media (prefers-color-scheme: light) {
            &.chrome {
                .text input:-webkit-autofill { -webkit-text-fill-color: @black !important; }
            }
        }
        @media (prefers-color-scheme: dark) {
            &.chrome {
                .text input:-webkit-autofill { -webkit-text-fill-color: @white !important; }
            }
        }
    }
    & when (@dark-mode-auto-switcher = false) {
        [data-ui-theme="light"] {
            &.chrome {
                .text input:-webkit-autofill { -webkit-text-fill-color: @black !important; }
            }
        }
        [data-ui-theme="dark"] {
            &.chrome {
                .text input:-webkit-autofill { -webkit-text-fill-color: @white !important; }
            }
        }
    }
}

.no-border {
    &.text input,&.select select { line-height: (@btn-default - @form-padding * 2); height: @btn-default; }
}
.border-dual {
    &.text input,&.select select { line-height: (@btn-default - @form-padding * 2 - @border-dual * 2); height: (@btn-default - @border-dual * 2); }
}

.select {
    &:not(.form-focus) {
        select { opacity: @select-opacity; }
    }

    select { padding-right: (@select-icon-size + @form-padding * 2); position: relative; z-index: 2; }
    option,optgroup { ._bg-var(highlighted); }
    .icon { ._icon(@select-icon-size); position: absolute; top: 50%; right: @form-padding; cursor: default; transform: translateY(-50%); opacity: @form-icon-opacity; }

    .ie & select:focus::-ms-value { color: inherit; background-color: @no-color; }
    .ie & select::-ms-expand { display: none; }
}

.select-multi {
    .mobile &,.ie & { padding: @form-padding; }
    select { margin-bottom: -(@form-spacing - 3); }
    .edge & select { margin-bottom: -@form-padding; }
    option,optgroup { padding: (@form-spacing - 2) @form-padding; }
    option:not(:last-child) { ._border-var(@dir: border-bottom; @var: select-multi-options-border); }
}

.check,.radio { vertical-align: middle; display: inline-block; }

.file {
    line-height: normal; height: (@btn-default - 4); ._border-var(); overflow: hidden; display: block; position: relative;

    &.border-dual { height: ((@btn-default - 4) + @border-dual * 2); }
    input { vertical-align: middle; width: 100%; overflow: hidden; position: absolute; top: 0; right: 0; bottom: 0; left: 0; z-index: 3; opacity: 0; } // don't change z-index!
    .btn {
        text-overflow: ellipsis; white-space: nowrap; min-width: @file-btn-width; height: (@btn-default - 4); line-height: ((@btn-default - 4) - @btn-default-padding * 2); overflow: hidden; float: left;

        .icon { ._icon((@btn-default-icon - 4)); }
    }
    &.round {
        .btn { border-radius: (@round / 2) 0 0 (@round / 2); }
    }
    & > i { white-space: nowrap; font-style: normal; text-overflow: ellipsis; line-height: (@btn-default - 4); width: 100%; padding-right: (@form-padding * 2); padding-left: (@file-btn-width + @form-padding * 2); overflow: hidden; display: block; position: absolute; }
    .desktop &:hover {
        .btn { ._bg-var(btn-hover-bg); }
    }

}

label.custom { min-height: (@btn-default - @form-padding * 2); padding-top: @form-spacing; padding-bottom: (@form-spacing - 2); display: inline-block; }

.check-custom,.radio-custom,.switch-custom {
    vertical-align: middle; height: (@btn-default - @form-padding * 2); margin-bottom: (@form-spacing - 3); ._border-var(); overflow: hidden; display: inline-block; position: relative;

    .state { content: ""; width: @form-custom-state-size; height: @form-custom-state-size; display: block; position: absolute; top: 50%; left: 50%; transform: translate(-50%,-50%); }
    input { width: 140%; height: 140%; display: block; position: absolute; top: -20%; left: -20%; z-index: 1; opacity: 0; }

}
.check-custom,.radio-custom {
    width: (@btn-default - @form-padding * 2);

    .state { ._bg-var(check-custom-bg); opacity: 0; }

}
.radio-custom,.switch-custom.round {
    border-radius: @form-custom-state-size !important;

    .state { border-radius: (@form-custom-state-size / 2); }
}

.radio-custom {
    input:checked + .state { opacity: 1; }
}

.check-custom {
    &.round .state { border-radius: (@round / 2); }
    input {
        &:checked + i,&:indeterminate + .state { opacity: 1; }
        &:indeterminate + .state { height: @indeterminate-state-size; }
    }
}

.switch-custom {
    width: @switch-custom-size;

    input {
        &:checked + .state {
            transform: translate(25%,-50%);

            &:not([class*="ui-fill-"]) { background-color: @green; }
        }
        &:not(:checked) + .state {
            &,&[class*="ui-fill-"] { ._bg-var(switch-custom-bg); }
        }
        &:not(:indeterminate):not(:checked):not(:indeterminate) + .state { transform: translate(-125%,-50%); }
        &:indeterminate + .state { background-color: @yellow; }
    }

    .desktop &:hover {
        .state { width: (@form-custom-state-size + 4); }
        input {
            &:checked + .state { transform: translate(0,-50%); }
            &:not(:checked) + .state { transform: translate(-100%,-50%); }
            &:indeterminate + .state { transform: translate(-50%,-50%); }
        }
    }
}

.range {
    width: 100%; height: 1.4rem; padding: 0; background-color: @no-color;

    &::-webkit-slider-thumb { width: 1rem; height: 1rem; margin-top: -.25rem; background-color: @green; border: 0; border-radius: 50%; @no-appearance(); }
    &.ui-color::-webkit-slider-thumb { background-color: currentColor; }
    &::-webkit-slider-runnable-track { width: 100%; height: .5rem; ._bg-var(range-track-bg); border-color: @no-color; border-radius: @range-radius; cursor: pointer; }
    &:hover::-webkit-slider-runnable-track { ._bg-var(range-track-hover-bg); }
    &:not(:disabled) {
        &:hover::-webkit-slider-thumb { transform: scale(1.2); }
        &::-webkit-slider-thumb:active { transform: scale(1.4); }
    }

    &::-moz-range-thumb { width: 1rem; height: 1rem; background-color: @green; border: 0; border-radius: 50%; @no-appearance(); }
    &.ui-color::-moz-range-thumb { background-color: currentColor; }
    &::-moz-range-track { width: 100%; height: .5rem; ._bg-var(range-track-bg); border-color: @no-color; border-radius: @range-radius; cursor: pointer; }
    &:hover::-moz-range-track { ._bg-var(range-track-hover-bg); }
    &:not(:disabled) {
        &:hover::-moz-range-thumb { transform: scale(1.2); }
        &::-moz-range-thumb:active { transform: scale(1.4); }
    }

    &::-ms-thumb { width: 1rem; height: 1rem; background-color: @green; margin-top: 0; margin-right: .2rem; margin-left: .2rem; border: 0; border-radius: 50%; @no-appearance(); }
    &.ui-color::-ms-thumb { background-color: currentColor; }
    &::-ms-track { color: @no-color; width: 100%; height: .5rem; background-color: @no-color; border-color: @no-color; cursor: pointer; }
    &:not(:disabled) {
        &:hover::-ms-thumb { transform: scale(1.2); }
        &::-ms-thumb:active { transform: scale(1.4); }
    }

    &::-ms-fill-lower { ._bg-var(range-track-bg); border-radius: @range-radius; }
    &:hover::-ms-fill-lower { ._bg-var(range-track-hover-bg); }

    &::-ms-fill-upper { ._bg-var(range-track-bg); border-radius: @range-radius; }
    &:hover::-ms-fill-upper { ._bg-var(range-track-hover-bg); }

    &:disabled {
        &::-webkit-slider-thumb { ._bg-var(range-thumb-color); }
        &::-moz-range-thumb { ._bg-var(range-thumb-color); }
        &::-ms-thumb { ._bg-var(range-thumb-color); }
        &::-webkit-slider-runnable-track { cursor: default; }
        &::-moz-range-track { cursor: default; }
    }
}

.error {
    .check-custom,.radio-custom,.switch-custom { background-color: @form-error-bg !important; border-color: @red !important; }
    &:not(.form-holder):not(.required-accept):not(.hint),label.check,label.radio { background-color: @form-error-bg !important; border-color: @red !important; }

}
.warning {
    .check-custom,.radio-custom,.switch-custom { background-color: @form-warning-bg !important; border-color: @yellow !important; }
    &:not(.form-holder):not(.required-accept):not(.hint),label.check,label.radio { background-color: @form-warning-bg !important; border-color: @yellow !important; }
}

.form-light {
    border-color: @border-color-dark !important;

    & > input,& > select:not(:focus),& > textarea,.icon { color: @white; }
    & > input:-webkit-autofill:not(:focus) { -webkit-text-fill-color: @white !important; }
}

.hint {
    font-size: (@font-size - 1); margin-top: @form-spacing; margin-bottom: 0 !important; display: block;

    &.error { color: @red; }
    &.warning { color: @yellow; }
  }

  .required-msg {
    color: @red; margin-top: @form-spacing; margin-bottom: 0 !important;

    &.show { display: block; }
    &:not(.show) { display: none; }
  }

.form-inline {
    &,&-xs { vertical-align: middle; display: inline-block !important; }
}

.form-disabled {
    ._bg-var(form-disabled-bg); opacity: @form-disabled-opacity;

    &.form-light { background-color: @form-disabled-bg-dark; }
}
.form-readonly {
    input,textarea { ._color-var(form-readonly-color); }
    &.form-light {
        input,textarea { color: @form-readonly-color-dark; }
    }
}

.form-label,.form-grid { line-height: normal; opacity: @form-label-opacity; }
.form-grid { font-size: (@font-size - 1); }
.form-label { margin-bottom: @form-spacing; display: inline-block; }

.form-focus {
    ._border-color-var(form-focus-border);

    &.form-light { border-color: @form-focus-border-dark !important; }
    &:not(.form-readonly) { ._bg-var(form-focus-bg); box-shadow: @form-focus-shadow; }

    & > input,& > select,&.form-light > select option,& > textarea,.icon:not([class*="ui-color"]) { ._color-var(black); }
    &.form-light {
        & > input,& > select,& > textarea,.icon:not([class*="ui-color"]) { color: @white !important; }
    }

    &[class*="text-icon"],&.select {
        .icon { opacity: 1; }
    }
    &.select {
        .icon { transform: translateY(-50%) rotate(-180deg); }
    }
}

::placeholder {
    ._color-var(placeholder-color);

    .form-focus > & { ._color-var(placeholder-focus-color); }
    .form-light > & { color: @placeholder-color-dark; }
    .form-light.form-focus > & { color: @placeholder-focus-color-dark; }

}
::-ms-input-placeholder {
    ._color-var(placeholder-color);

    .form-focus > & { ._color-var(placeholder-focus-color); }
    .form-light > & { color: @placeholder-color-dark; }
    .form-light.form-focus > & { color: @placeholder-focus-color-dark; }
}
::-moz-placeholder { opacity: 1; }

[class*="text-icon"] {
    .icon,& > button { ._color-var(black); cursor: default; }
    & > .icon,& > button { position: absolute; top: 50%; right: @form-padding; transform: translateY(-50%); }
    & .icon { ._icon(@text-icon-size); }
    .icon { opacity: @form-icon-opacity; }
    &:not(.text-icon-l) {
        & > input { padding-right: (@text-icon-size + @form-padding * 2) !important; }
    }

    & > button {
        &,.icon { cursor: pointer; } // fix: set cursor setting svg icons, too
        &:hover {
            .icon { opacity: 1; }
        }
    }
}

.text-icon-l {
    & > .icon { right: inherit; left: @form-padding; }
    & > input { padding-left: (@text-icon-size + @form-padding * 2) !important; }
}

.text-icon-both {
    & > .text-icon-l { &:extend(.text-icon-l > .icon); }
    & > input {
        padding-right: (@text-icon-size + @form-padding * 2) !important;

        &:extend(.text-icon-l > input);
    }
}

.clear-form {
    &:not(.open) { display: none; }
    &:not(.open-ease) { opacity: 0; }
    .text & {
        .icon { ._icon(@clear-form-icon-size); }
    }
}

.form-holder {
    .text,.select { min-width: inherit !important; }

    &-focus {
        [class*="col-"] {
            & > * { ._border-color-var(form-focus-border); }
            & > .form-light,& > .border-light { border-color: @form-focus-border-dark !important; }
        }
    }

    [class*="col-"] {
        &:not(:first-child) {
            & > * { border-top-left-radius: 0; border-bottom-left-radius: 0; }
        }
        &:not(:last-child) {
            & > * { border-right: 0; border-top-right-radius: 0; border-bottom-right-radius: 0; }
        }
    }
    .row {
        &:not(:last-child) {
            & > [class*="col-"]:last-child {
                & > * { border-right: 0; }
            }
        }
        &:not(:first-child):not(:last-child) {
            & > [class*="col-"] {
                & > * { border-radius: 0; }
            }        }
        &:last-child {
            & > [class*="col-"]:first-child {
                & > * { border-top-left-radius: 0; border-bottom-left-radius: 0; }
            }
        }
        &:first-child {
            & > [class*="col-"]:last-child {
                & > * { border-top-right-radius: 0; border-bottom-right-radius: 0; }
            }
        }
    }

    &.error {
        .text,.select,.border,[class*="border-"] { border-color: @red !important; }
        .text,.select { background-color: @form-error-bg; }
    }
}

.form-lg {
    .text,.select { min-height: @btn-lg; }

    .text {
        input {
            font-size: @large; line-height: (@btn-lg - 2 * @form-padding); height: @btn-lg; padding-right: (@form-padding * 2); padding-left: (@form-padding * 2);
        }
        &.no-border {
            input { line-height: (@btn-lg - 2 * @form-padding - 2); height: @btn-lg; }
        }
        &.border-dual {
            input { line-height: (@btn-lg - 2 * @form-padding - @border-dual * 2); height: (@btn-lg - @border-dual * 2); }
        }
    }

    .select {
        select {
            padding-right: (@icon-default-size + @form-padding * 4);

            &:extend(.form-lg .text input);
        }
        &.no-border {
            select { &:extend(.form-lg .text.no-border input); }
        }
        &.border-dual {
            select { &:extend(.form-lg .text.border-dual input); }
        }
        .icon { ._icon(@icon-default-size); right: (@form-padding * 2); }
    }

    [class*="text-icon"] {
        & > .icon { &:extend(.form-lg .select .icon); }
        .icon { ._icon(@icon-default-size); }
        & > button { right: (@form-padding * 2); }
        &:not(.text-icon-l) > input { padding-right: (@icon-default-size + @form-padding * 4) !important; }
    }

    .text-icon-l {
        & > .icon { left: (@form-padding * 2); }
        & > input { padding-left: (@icon-default-size + @form-padding * 4) !important; }
    }

    .text-icon-both {
        & > .text-icon-l { &:extend(.form-lg .text-icon-l > .icon); }
        & > input {
            &:extend(.form-lg [class*="text-icon"]:not(.text-icon-l) > input);
            &:extend(.form-lg .text-icon-l > input);
        }
    }

    .clear-form {
        .icon { ._icon(@icon-default-size); }
    }

    .file {
        height: (@btn-lg - 4);

        &.border-dual { height: ((@btn-lg - 4) + @border-dual * 2); }
        .btn {
            height: (@btn-lg - 4); line-height: ((@btn-lg - 4) - @btn-lg-padding * 2);

            .icon { ._icon((@btn-lg-icon - 4)); }
        }
        & > i { font-size: @large; line-height: (@btn-lg - 4); }
    }
}

@media (@default-start) {
    .form-grid {
        line-height: @btn-default; display: inline-block;

        .form-lg & { font-size: @font-size; line-height: @btn-lg; }
    }
}
@media (@md-finish) {
    .form-grid {
        display: block;

        .row [class*="col-"]:not(.sm-fluid) & { margin-bottom: -(@form-spacing * 3); }
    }

    .row-gap- {
        &md {
            &,&-v {
                [class*="col-"]:not(.sm-fluid) {
                    .form-grid { margin-bottom: -@form-spacing; }
                }
            }
        }
        &sm {
            &,&-v {
                [class*="col-"]:not(.sm-fluid) {
                    .form-grid { margin-bottom: 0; }
                }
            }
        }
        &xs {
            &,&-v {
                [class*="col-"]:not(.sm-fluid) {
                    .form-grid { margin-bottom: (@form-spacing - 2); }
                }
            }
        }
    }
    .no-row-gap {
        [class*="col-"]:not(.sm-fluid) {
            .form-grid { margin-top: (@form-spacing * 2); margin-bottom: @form-spacing; }
        }
    }

}
@media (@md-start) and (@md-finish) {
    .sm-fluid {
        .form-grid { line-height: @btn-default; display: inline-block; }
    }
}
@media (@sm-finish) {
    .sm-fluid {
        .form-grid {
            display: block;

            .row [class*="col-"] & { margin-bottom: -(@form-spacing * 3); }
        }
    }

    .row-gap- {
        &md {
            &,&-v {
                [class*="col-"].sm-fluid {
                    .form-grid { margin-bottom: -@form-spacing; }
                }
            }
        }
        &sm {
            &,&-v {
                [class*="col-"].sm-fluid {
                    .form-grid { margin-bottom: 0; }
                }
            }
        }
        &xs {
            &,&-v {
                [class*="col-"].sm-fluid {
                    .form-grid { margin-bottom: (@form-spacing - 2); }
                }
            }
        }
    }
    .no-row-gap {
        [class*="col-"].sm-fluid {
            .form-grid { margin-top: (@form-spacing * 2); margin-bottom: @form-spacing; }
        }
    }
}
@media (@xs-finish) {
    .form-inline-xs {
        width: 100% !important; display: block !important;

        &:not(:last-child):not(.highlight) { margin-bottom: @form-spacing; }
    }

    label.custom {
        & + & { display: block; }
    }
}